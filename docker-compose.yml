services:

  client:
    container_name: client
    build:
      context: ./client
      dockerfile: Dockerfile
    image: erckafrmns/atkk-client:v1.1
    ports:
      - "3000:80" 
    restart: always
    depends_on:
      - server
    volumes:
      - ./client:/client-app

  server:
    container_name: server
    build:
      context: ./server
      dockerfile: Dockerfile
    image: erckafrmns/atkk-server:v1.1
    volumes:
      - ./server:/server-app
    ports:
      - "5000:5000"  
    depends_on:
      - model
      - db 
    env_file:
      - .env
    restart: always
    environment:
      - FLASK_APP=server.py
      - FLASK_ENV=development
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}

  model:
    container_name: model
    build:
      context: ./model
      dockerfile: Dockerfile
    image: erckafrmns/atkk-model:v1.1
    volumes:
      - ./model:/model-app
    ports:
      - "5001:5001"
    restart: always
    environment:
      - MODEL_PATH=/model-app/trained_model

  db:
    image: postgres:17.1
    environment:
      - POSTGRES_USER=${POSTGRES_USER}  
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}  
      - POSTGRES_DB=${POSTGRES_DB} 
    volumes:
      - postgres_data:/var/lib/postgresql/data 
    restart: always 
    ports:
      - "5432:5432"  

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    ports:
      - "5050:80"
    depends_on:
      - db

volumes:
  postgres_data:  
